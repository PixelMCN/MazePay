<?php

declare(strict_types=1);

namespace Pixelis0P\MazePay\forms;

use pocketmine\form\Form;
use pocketmine\player\Player;
use Pixelis0P\MazePay\MazePay;

class WithdrawForm implements Form {
    
    private MazePay $plugin;
    private Player $player;
    
    public function __construct(MazePay $plugin, Player $player) {
        $this->plugin = $plugin;
        $this->player = $player;
    }
    
    public function jsonSerialize(): array {
        $uuid = $this->player->getUniqueId()->toString();
        $db = $this->plugin->getDatabaseManager();
        $bankBalance = $db->getBankBalance($uuid);
        
        return [
            "type" => "custom_form",
            "title" => "§l§cWithdraw Menu",
            "content" => [
                [
                    "type" => "label",
                    "text" => "§eBank Balance: §a" . $this->plugin->formatMoney($bankBalance) . "\n\n§7Enter the amount you want to withdraw from your bank:"
                ],
                [
                    "type" => "input",
                    "text" => "§l§cAmount",
                    "placeholder" => "Enter amount..."
                ]
            ]
        ];
    }
    
    public function handleResponse(Player $player, $data): void {
        if ($data === null) {
            // Player closed form, go back to bank menu
            $player->sendForm(new BankForm($this->plugin, $player));
            return;
        }
        
        $amount = $data[1] ?? "";
        
        if (!is_numeric($amount) || (float)$amount <= 0) {
            $player->sendMessage($this->plugin->getPrefix() . $this->plugin->getMessage("invalid-amount"));
            $player->sendForm(new WithdrawForm($this->plugin, $player));
            return;
        }
        
        $amount = (float)$amount;
        $uuid = $player->getUniqueId()->toString();
        $db = $this->plugin->getDatabaseManager();
        
        $bankBalance = $db->getBankBalance($uuid);
        
        if ($bankBalance < $amount) {
            $player->sendMessage($this->plugin->getPrefix() . $this->plugin->getMessage("withdraw-insufficient"));
            $player->sendForm(new WithdrawForm($this->plugin, $player));
            return;
        }
        
        $db->deductBankBalance($uuid, $amount);
        $db->addWalletBalance($uuid, $amount);
        
        $message = str_replace("{amount}", $this->plugin->formatMoney($amount), $this->plugin->getMessage("withdraw-success"));
        $player->sendMessage($this->plugin->getPrefix() . $message);
        
        // Return to bank menu
        $player->sendForm(new BankForm($this->plugin, $player));
    }
}